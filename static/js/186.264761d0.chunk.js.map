{"version":3,"file":"static/js/186.264761d0.chunk.js","mappings":"8LAgCA,UA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GACVO,MAAK,SAACC,GAAD,OAAcJ,EAAWI,EAASC,YACvCC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACX,KAIF,6BACGG,GAA8B,IAAnBA,EAAQW,OAClBX,EAAQY,KAAI,SAACC,GACX,OACE,4BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFHF,EAAOG,QAOrB,4C,oLC1BFC,EAAW,+BACXC,EAAM,mC,SAGGC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAqBC,EAArB,+BAA2B,GAAIC,EAA/B,+BAAwC,GAAxC,SACyBC,MAAMF,EAAKC,GADpC,YACQhB,EADR,QAEkBkB,GAFlB,iCAGYlB,EAASmB,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAM,GAAD,OAAIF,EAAJ,qCAAyCC,IAGhD,SAASW,EAAeC,GAC7B,OAAOX,EAAM,GAAD,OACPF,EADO,iCAC0BC,EAD1B,iCACsDY,EADtD,gCAIP,SAASC,EAAalC,GAC3B,OAAOsB,EAAM,GAAD,OAAIF,EAAJ,kBAAsBpB,EAAtB,oBAAyCqB,EAAzC,oBAEP,SAASc,EAAWnC,GACzB,OAAOsB,EAAM,GAAD,OACPF,EADO,kBACWpB,EADX,4BACsCqB,EADtC,oBAIP,SAASf,EAAaN,GAC3B,OAAOsB,EAAM,GAAD,OACPF,EADO,kBACWpB,EADX,4BACsCqB,EADtC","sources":["components/Reviews/Reviews.jsx","utils/Api.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchReviews } from \"../../utils/Api\";\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState();\r\n  useEffect(() => {\r\n    fetchReviews(movieId)\r\n      .then((response) => setReviews(response.results))\r\n      .catch((error) => console.log(error));\r\n  }, [movieId]);\r\n\r\n  // console.log(reviews);\r\n  return (\r\n    <article>\r\n      {reviews && reviews.length !== 0 ? (\r\n        reviews.map((review) => {\r\n          return (\r\n            <div key={review.id}>\r\n              <h3>Author: {review.author}</h3>\r\n              <p>{review.content}</p>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <h3>Not Reviews</h3>\r\n      )}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst key = \"a4de87479d087ab06b31a45a7a77ca83\";\r\n// const API = `${url}?api_key=${key}&${param}`;\r\n\r\nasync function Fetch(url = \"\", params = {}) {\r\n  const response = await fetch(url, params);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchHomePage() {\r\n  return Fetch(`${BASE_URL}/trending/all/day?api_key=${key}`);\r\n}\r\n\r\nexport function fetchMoviePage(query) {\r\n  return Fetch(\r\n    `${BASE_URL}/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`\r\n  );\r\n}\r\nexport function fetchMovieId(movieId) {\r\n  return Fetch(`${BASE_URL}/movie/${movieId}?api_key=${key}&language=en-US`);\r\n}\r\nexport function fetchCasts(movieId) {\r\n  return Fetch(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${key}&language=en-US`\r\n  );\r\n}\r\nexport function fetchReviews(movieId) {\r\n  return Fetch(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${key}&language=en-US`\r\n  );\r\n}\r\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","response","results","catch","error","console","log","length","map","review","author","content","id","BASE_URL","key","Fetch","url","params","fetch","ok","json","Promise","reject","Error","fetchHomePage","fetchMoviePage","query","fetchMovieId","fetchCasts"],"sourceRoot":""}