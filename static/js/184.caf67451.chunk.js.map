{"version":3,"file":"static/js/184.caf67451.chunk.js","mappings":"6LA8DA,UA1DmB,WACjB,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAuBA,OACE,yCAEE,kBAAMC,SAhBW,SAACC,GACpBA,EAAMC,iBACDN,IAGe,KAAhBA,GACFO,MAAM,gGAERC,EAAAA,EAAAA,IAAeR,GAAaS,MAAK,SAACC,GAAD,OAAcP,EAAUO,EAASC,cAQhE,WACE,uCAEE,kBACEC,MAAOZ,EACPa,aAAa,MACbC,WAAS,EACTC,KAAK,OACLC,KAAK,QACLC,SAfU,SAACZ,GACnBJ,EAASI,EAAMa,OAAON,cAiBlB,mBAAQG,KAAK,SAAb,uBAEF,wBACGb,GACCA,EAAOiB,KAAI,SAACC,GAAD,aAET,yBAEE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAA1B,mBACGF,EAAMG,sBADT,QAC2BH,EAAMI,iBAH1BJ,EAAME,c,oLClDrBG,EAAW,+BACXC,EAAM,mC,SAGGC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAqBC,EAArB,+BAA2B,GAAIC,EAA/B,+BAAwC,GAAxC,SACyBC,MAAMF,EAAKC,GADpC,YACQnB,EADR,QAEkBqB,GAFlB,iCAGYrB,EAASsB,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAM,GAAD,OAAIF,EAAJ,qCAAyCC,IAGhD,SAASlB,EAAe6B,GAC7B,OAAOV,EAAM,GAAD,OACPF,EADO,iCAC0BC,EAD1B,iCACsDW,EADtD,gCAIP,SAASC,EAAaC,GAC3B,OAAOZ,EAAM,GAAD,OAAIF,EAAJ,kBAAsBc,EAAtB,oBAAyCb,EAAzC,oBAEP,SAASc,EAAWD,GACzB,OAAOZ,EAAM,GAAD,OACPF,EADO,kBACWc,EADX,4BACsCb,EADtC,oBAIP,SAASe,EAAaF,GAC3B,OAAOZ,EAAM,GAAD,OACPF,EADO,kBACWc,EADX,4BACsCb,EADtC","sources":["components/MoviesPage/MoviesPage.jsx","utils/Api.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchMoviePage } from \"../../utils/Api\";\r\n// import MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\r\nconst MoviesPage = () => {\r\n  const [searchQuery, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  // useEffect(\r\n  //   () =>\r\n  //     fetchMoviePage(searchQuery).then((response) =>\r\n  //       console.log(response.results)\r\n  //     ),\r\n  //   [searchQuery]\r\n  // );\r\n  // console.log(movies);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n    if (searchQuery === \"\") {\r\n      alert(\"Ввелите название\");\r\n    }\r\n    fetchMoviePage(searchQuery).then((response) => setMovies(response.results));\r\n  };\r\n  const inputChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      MoviesPage\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Movies\r\n          <input\r\n            value={searchQuery}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            type=\"text\"\r\n            name=\"movie\"\r\n            onChange={inputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Searh</button>\r\n      </form>\r\n      <ul>\r\n        {movies &&\r\n          movies.map((movie) => (\r\n            // eslint-disable-next-line jsx-a11y/alt-text\r\n            <li key={movie.id}>\r\n              {/* <img src={film.poster_path} /> */}\r\n              <Link to={`/movie/${movie.id}`}>\r\n                {movie.original_title ?? movie.original_name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst key = \"a4de87479d087ab06b31a45a7a77ca83\";\r\n// const API = `${url}?api_key=${key}&${param}`;\r\n\r\nasync function Fetch(url = \"\", params = {}) {\r\n  const response = await fetch(url, params);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchHomePage() {\r\n  return Fetch(`${BASE_URL}/trending/all/day?api_key=${key}`);\r\n}\r\n\r\nexport function fetchMoviePage(query) {\r\n  return Fetch(\r\n    `${BASE_URL}/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`\r\n  );\r\n}\r\nexport function fetchMovieId(movieId) {\r\n  return Fetch(`${BASE_URL}/movie/${movieId}?api_key=${key}&language=en-US`);\r\n}\r\nexport function fetchCasts(movieId) {\r\n  return Fetch(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${key}&language=en-US`\r\n  );\r\n}\r\nexport function fetchReviews(movieId) {\r\n  return Fetch(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${key}&language=en-US`\r\n  );\r\n}\r\n"],"names":["useState","searchQuery","setQuery","movies","setMovies","onSubmit","event","preventDefault","alert","fetchMoviePage","then","response","results","value","autoComplete","autoFocus","type","name","onChange","target","map","movie","to","id","original_title","original_name","BASE_URL","key","Fetch","url","params","fetch","ok","json","Promise","reject","Error","fetchHomePage","query","fetchMovieId","movieId","fetchCasts","fetchReviews"],"sourceRoot":""}